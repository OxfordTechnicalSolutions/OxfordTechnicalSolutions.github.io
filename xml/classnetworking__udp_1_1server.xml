<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classnetworking__udp_1_1server" kind="class" language="C++" prot="public">
    <compoundname>networking_udp::server</compoundname>
    <includes local="no">udp_server_client.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnetworking__udp_1_1server_1aa3453ba7fce089c774b42a9abb1e5b13" prot="private" static="no" mutable="no">
        <type>boost::asio::io_service</type>
        <definition>boost::asio::io_service networking_udp::server::io_service</definition>
        <argsstring></argsstring>
        <name>io_service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="153" column="25" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnetworking__udp_1_1server_1aff437ae83b434df4e4aec2682869c132" prot="private" static="no" mutable="no">
        <type>udp::socket</type>
        <definition>udp::socket networking_udp::server::socket</definition>
        <argsstring></argsstring>
        <name>socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="154" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnetworking__udp_1_1server_1ae43e5050bfc61deb81d4d2f7c122cc55" prot="private" static="no" mutable="no">
        <type>udp::endpoint</type>
        <definition>udp::endpoint networking_udp::server::remote_endpoint</definition>
        <argsstring></argsstring>
        <name>remote_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="155" column="15" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnetworking__udp_1_1server_1a4ec4023e598fbc317fc4df708f06fa22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>networking_udp::server::server</definition>
        <argsstring>()</argsstring>
        <name>server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="158" column="1" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1server_1a8de2e4c08b595c76cb751fa68bdead71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void networking_udp::server::set_remote_endpoint</definition>
        <argsstring>(std::string dest_ip, int dest_port)</argsstring>
        <name>set_remote_endpoint</name>
        <param>
          <type>std::string</type>
          <declname>dest_ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sents the remote endpoint if the server class will send a large volume of data to a single endpoint</para>
<para>params: dest_ip - the ip of the destination endpoint dest_port - port of the destination endpoint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="168" column="6" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1server_1a8231368f5643969f6cd80bfdb345c734" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t networking_udp::server::send</definition>
        <argsstring>(byte *buffer, std::size_t buffer_size)</argsstring>
        <name>send</name>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sends what is passed in the buffer to the endpoint specified in the set_remote_endpoint function</para>
<para>params: buffer - pointer to a buffer of data which is being sent buffer_size - the amount of data in buffer to send</para>
<para>return: the number of bytes sent to the endpoint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="183" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="183" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1server_1a604177361fe767d54d033c1525ffca83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t networking_udp::server::send_to</definition>
        <argsstring>(byte *buffer, std::size_t buffer_size, udp::endpoint remote_endpoint)</argsstring>
        <name>send_to</name>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>buffer_size</declname>
        </param>
        <param>
          <type>udp::endpoint</type>
          <declname>remote_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sends what is passed in the buffer to the endpoint specified in remote_endpoint</para>
<para>params: buffer - pointer to a buffer of data which is being sent buffer_size - the amount of data in buffer to send remote_endpoint - the endpoint to send the data to</para>
<para>return: the number of bytes sent to the endpoint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="215" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="215" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1server_1a2f06114170a794b1992b1d940a2ffebb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t networking_udp::server::send_to_port</definition>
        <argsstring>(byte *buffer, std::size_t buffer_size, short port)</argsstring>
        <name>send_to_port</name>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>buffer_size</declname>
        </param>
        <param>
          <type>short</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sends what is passed in the buffer to the endpoint specified in remote_endpoint allowing the user to specify a specific port to send the data to.</para>
<para>params: buffer - pointer to a buffer of data which is being sent buffer_size - the amount of data in buffer to send port - the port of the endpoint already specified</para>
<para>return: the number of bytes sent to the endpoint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="253" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="253" bodyend="276"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><hruler/>
 <mdash/>SERVER<mdash/></para>
<para>This sends a datagram over ethernet to the endpoint specified </para>
    </detaileddescription>
    <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="151" column="1" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="150" bodyend="277"/>
    <listofallmembers>
      <member refid="classnetworking__udp_1_1server_1aa3453ba7fce089c774b42a9abb1e5b13" prot="private" virt="non-virtual"><scope>networking_udp::server</scope><name>io_service</name></member>
      <member refid="classnetworking__udp_1_1server_1ae43e5050bfc61deb81d4d2f7c122cc55" prot="private" virt="non-virtual"><scope>networking_udp::server</scope><name>remote_endpoint</name></member>
      <member refid="classnetworking__udp_1_1server_1a8231368f5643969f6cd80bfdb345c734" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>send</name></member>
      <member refid="classnetworking__udp_1_1server_1a604177361fe767d54d033c1525ffca83" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>send_to</name></member>
      <member refid="classnetworking__udp_1_1server_1a2f06114170a794b1992b1d940a2ffebb" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>send_to_port</name></member>
      <member refid="classnetworking__udp_1_1server_1a4ec4023e598fbc317fc4df708f06fa22" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>server</name></member>
      <member refid="classnetworking__udp_1_1server_1a8de2e4c08b595c76cb751fa68bdead71" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>set_remote_endpoint</name></member>
      <member refid="classnetworking__udp_1_1server_1aff437ae83b434df4e4aec2682869c132" prot="private" virt="non-virtual"><scope>networking_udp::server</scope><name>socket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
