<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnetworking__udp_1_1server" kind="class" language="C++" prot="public">
    <compoundname>networking_udp::server</compoundname>
    <includes local="no">udp_server_client.hpp</includes>
    <templateparamlist>
      <param>
        <type>std::size_t</type>
        <declname>ETHERNET_MTU</declname>
        <defname>ETHERNET_MTU</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnetworking__udp_1_1server_1a75c2b57ef471ecf87a0b99666a3be826" prot="private" static="no" mutable="no">
        <type><ref refid="classOxTS_1_1Lib_1_1SimpleEthernetImpl" kindref="compound">OxTS::Lib::SimpleEthernetImpl</ref></type>
        <definition>OxTS::Lib::SimpleEthernetImpl networking_udp::server&lt; ETHERNET_MTU &gt;::m_ethernet</definition>
        <argsstring></argsstring>
        <name>m_ethernet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="86" column="31" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnetworking__udp_1_1server_1a1601b59a9c7a06fcabc1a1f284194280" prot="private" static="no" mutable="no">
        <type><ref refid="structnetworking__udp_1_1endpoint__t" kindref="compound">endpoint_t</ref></type>
        <definition>endpoint_t networking_udp::server&lt; ETHERNET_MTU &gt;::m_endpoint</definition>
        <argsstring></argsstring>
        <name>m_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="87" column="12" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnetworking__udp_1_1server_1af47894398458760afa6d5b7eb2fd85bc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>networking_udp::server&lt; ETHERNET_MTU &gt;::server</definition>
        <argsstring>()</argsstring>
        <name>server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="90" column="10" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1server_1aa5cc1dc34bb75ded1d879ea4892f0de0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void networking_udp::server&lt; ETHERNET_MTU &gt;::set_endpoint</definition>
        <argsstring>(const std::string &amp;dest_ip, const uint16_t dest_port)</argsstring>
        <name>set_endpoint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>dest_ip</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dest_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sents the remote endpoint if the server class will send a large volume of data to a single endpoint</para>
<para>params: dest_ip - the ip of the destination endpoint dest_port - port of the destination endpoint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="101" column="6" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1server_1aeb961f8bd0852a6835f603a3af070658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>SRC_BUFFER_SIZE</declname>
            <defname>SRC_BUFFER_SIZE</defname>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t networking_udp::server&lt; ETHERNET_MTU &gt;::send_to_endpoint</definition>
        <argsstring>(const std::array&lt; uint8_t, SRC_BUFFER_SIZE &gt; buffer, const std::size_t packet_size)</argsstring>
        <name>send_to_endpoint</name>
        <param>
          <type>const std::array&lt; uint8_t, SRC_BUFFER_SIZE &gt;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>packet_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sends what is passed in the buffer to the endpoint specified in the set_remote_endpoint function</para>
<para>params: buffer - pointer to a buffer of data which is being sent buffer_size - the amount of data in buffer to send</para>
<para>return: the number of bytes sent to the endpoint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="119" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1server_1a7a2f045e7ff2d31ce7ada60f470cc5e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>SRC_BUFFER_SIZE</declname>
            <defname>SRC_BUFFER_SIZE</defname>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t networking_udp::server&lt; ETHERNET_MTU &gt;::send_to</definition>
        <argsstring>(const std::array&lt; uint8_t, SRC_BUFFER_SIZE &gt; buffer, const std::size_t packet_size, const endpoint_t &amp;remote_endpoint)</argsstring>
        <name>send_to</name>
        <param>
          <type>const std::array&lt; uint8_t, SRC_BUFFER_SIZE &gt;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>packet_size</declname>
        </param>
        <param>
          <type>const <ref refid="structnetworking__udp_1_1endpoint__t" kindref="compound">endpoint_t</ref> &amp;</type>
          <declname>remote_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sends what is passed in the buffer to the endpoint specified in remote_endpoint</para>
<para>params: buffer - pointer to a buffer of data which is being sent buffer_size - the amount of data in buffer to send remote_endpoint - the endpoint to send the data to</para>
<para>return: the number of bytes sent to the endpoint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="136" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="136" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1server_1abec8532fed3bf094336ed69ecc8f5f16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>SRC_BUFFER_SIZE</declname>
            <defname>SRC_BUFFER_SIZE</defname>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t networking_udp::server&lt; ETHERNET_MTU &gt;::send_to_port</definition>
        <argsstring>(const std::array&lt; uint8_t, SRC_BUFFER_SIZE &gt; buffer, const std::size_t packet_size, const uint16_t port)</argsstring>
        <name>send_to_port</name>
        <param>
          <type>const std::array&lt; uint8_t, SRC_BUFFER_SIZE &gt;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>packet_size</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sends what is passed in the buffer to the endpoint specified in remote_endpoint allowing the user to specify a specific port to send the data to.</para>
<para>params: buffer - pointer to a buffer of data which is being sent buffer_size - the amount of data in buffer to send port - the port of the endpoint already specified</para>
<para>return: the number of bytes sent to the endpoint </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="174" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="174" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><hruler/>
 <mdash/>SERVER<mdash/></para>
<para>This sends a datagram over ethernet to the endpoint specified </para>
    </detaileddescription>
    <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="83" column="1" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="84" bodyend="197"/>
    <listofallmembers>
      <member refid="classnetworking__udp_1_1server_1a1601b59a9c7a06fcabc1a1f284194280" prot="private" virt="non-virtual"><scope>networking_udp::server</scope><name>m_endpoint</name></member>
      <member refid="classnetworking__udp_1_1server_1a75c2b57ef471ecf87a0b99666a3be826" prot="private" virt="non-virtual"><scope>networking_udp::server</scope><name>m_ethernet</name></member>
      <member refid="classnetworking__udp_1_1server_1a7a2f045e7ff2d31ce7ada60f470cc5e0" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>send_to</name></member>
      <member refid="classnetworking__udp_1_1server_1aeb961f8bd0852a6835f603a3af070658" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>send_to_endpoint</name></member>
      <member refid="classnetworking__udp_1_1server_1abec8532fed3bf094336ed69ecc8f5f16" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>send_to_port</name></member>
      <member refid="classnetworking__udp_1_1server_1af47894398458760afa6d5b7eb2fd85bc" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>server</name></member>
      <member refid="classnetworking__udp_1_1server_1aa5cc1dc34bb75ded1d879ea4892f0de0" prot="public" virt="non-virtual"><scope>networking_udp::server</scope><name>set_endpoint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
