<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnetworking__udp_1_1client" kind="class" language="C++" prot="public">
    <compoundname>networking_udp::client</compoundname>
    <includes local="no">udp_server_client.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnetworking__udp_1_1client_1a78cc41c511db1943063cd7ab600aca73" prot="private" static="no" mutable="no">
        <type>boost::asio::io_service</type>
        <definition>boost::asio::io_service networking_udp::client::io_service</definition>
        <argsstring></argsstring>
        <name>io_service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="29" column="25" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnetworking__udp_1_1client_1a39e9833009a7e0605d61d70d9148d92c" prot="private" static="no" mutable="no">
        <type>udp::endpoint</type>
        <definition>udp::endpoint networking_udp::client::remote_endpoint</definition>
        <argsstring></argsstring>
        <name>remote_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="30" column="15" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnetworking__udp_1_1client_1a45c5ec8f7b17cf29e04dc118a9cc67d8" prot="private" static="no" mutable="no">
        <type>udp::socket</type>
        <definition>udp::socket networking_udp::client::socket</definition>
        <argsstring></argsstring>
        <name>socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="31" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnetworking__udp_1_1client_1a2701148b584c65a9f79a87596f5af3f5" prot="private" static="no" mutable="no">
        <type>udp::endpoint</type>
        <definition>udp::endpoint networking_udp::client::local_endpoint</definition>
        <argsstring></argsstring>
        <name>local_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="32" column="15" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnetworking__udp_1_1client_1ad130eba5eeae3e19702e2849e4235b82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>networking_udp::client::client</definition>
        <argsstring>()</argsstring>
        <name>client</name>
        <briefdescription>
<para>Constructor requires a port. This will be the local port a socket is opened on param: port - the port on the local machine the socket will be opened on when receiving data. </para>
        </briefdescription>
        <detaileddescription>
<para>default constructor to defer setting the local endpoint to a later time. Not safe to use this constructor and not specific local port with </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="38" column="1" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1client_1a502bbb5fb8a487f376864d665be3f46c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>networking_udp::client::client</definition>
        <argsstring>(short local_port)</argsstring>
        <name>client</name>
        <param>
          <type>short</type>
          <declname>local_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="49" column="1" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1client_1a0024a08b600163e631b2cb0810188ade" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void networking_udp::client::set_local_port</definition>
        <argsstring>(short local_port)</argsstring>
        <name>set_local_port</name>
        <param>
          <type>short</type>
          <declname>local_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets the local port of the client which is what will be used when receiving data.</para>
<para>params: local_port - this specifies the port which incoming data will be received on when receive_from and receive are called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="61" column="6" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1client_1a6b40d285a42cb7aea1c4b26ea69e37e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t networking_udp::client::receive_from</definition>
        <argsstring>(byte *recv_buffer, std::size_t size_of_buffer, udp::endpoint required_sender_endpoint)</argsstring>
        <name>receive_from</name>
        <param>
          <type>byte *</type>
          <declname>recv_buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size_of_buffer</declname>
        </param>
        <param>
          <type>udp::endpoint</type>
          <declname>required_sender_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to received a UDP packet</para>
<para>params: recv_buffer - the data buffer which is written to size_of_buffer - specifies the size of the buffer which will receive the data, if the datagram is larger the extra data won&apos;t be stored sender_endpoint - the endpoint of the sender, useful if you have multiple sources of incoming data to same port and want to differentiate data based on sender.</para>
<para>return: number of bytes received, if it fails prints error code and returns 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="79" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="79" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classnetworking__udp_1_1client_1a1526349422f85266eb10df98ecb0dc36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t networking_udp::client::receive</definition>
        <argsstring>(byte *recv_buffer, std::size_t size_of_buffer)</argsstring>
        <name>receive</name>
        <param>
          <type>byte *</type>
          <declname>recv_buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size_of_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to received a UDP packet</para>
<para>params: recv_buffer - the data buffer which is written to size_of_buffer - specifies the size of the buffer which will receive the data, if the datagram is larger the extra data won&apos;t be stored returns number of bytes in received, if it fails prints error code and returns 0. If you need to filter payloads based on source endpoint, use recieve_from()</para>
<para>return: number of bytes received, if it fails prints error code and returns 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="121" column="13" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="121" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><mdash/>CLIENT<mdash/> Simple UDP client program which receives data on a given port </para>
    </detaileddescription>
    <location file="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" line="27" column="1" bodyfile="/home/runner/work/gad-sdk/gad-sdk/oxts-sdk-gal-cpp/include/oxts/gal-cpp/udp_server_client.hpp" bodystart="28" bodyend="142"/>
    <listofallmembers>
      <member refid="classnetworking__udp_1_1client_1ad130eba5eeae3e19702e2849e4235b82" prot="public" virt="non-virtual"><scope>networking_udp::client</scope><name>client</name></member>
      <member refid="classnetworking__udp_1_1client_1a502bbb5fb8a487f376864d665be3f46c" prot="public" virt="non-virtual"><scope>networking_udp::client</scope><name>client</name></member>
      <member refid="classnetworking__udp_1_1client_1a78cc41c511db1943063cd7ab600aca73" prot="private" virt="non-virtual"><scope>networking_udp::client</scope><name>io_service</name></member>
      <member refid="classnetworking__udp_1_1client_1a2701148b584c65a9f79a87596f5af3f5" prot="private" virt="non-virtual"><scope>networking_udp::client</scope><name>local_endpoint</name></member>
      <member refid="classnetworking__udp_1_1client_1a1526349422f85266eb10df98ecb0dc36" prot="public" virt="non-virtual"><scope>networking_udp::client</scope><name>receive</name></member>
      <member refid="classnetworking__udp_1_1client_1a6b40d285a42cb7aea1c4b26ea69e37e8" prot="public" virt="non-virtual"><scope>networking_udp::client</scope><name>receive_from</name></member>
      <member refid="classnetworking__udp_1_1client_1a39e9833009a7e0605d61d70d9148d92c" prot="private" virt="non-virtual"><scope>networking_udp::client</scope><name>remote_endpoint</name></member>
      <member refid="classnetworking__udp_1_1client_1a0024a08b600163e631b2cb0810188ade" prot="public" virt="non-virtual"><scope>networking_udp::client</scope><name>set_local_port</name></member>
      <member refid="classnetworking__udp_1_1client_1a45c5ec8f7b17cf29e04dc118a9cc67d8" prot="private" virt="non-virtual"><scope>networking_udp::client</scope><name>socket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
